Unit 11 - PyGRASS scripting
===========================

Let's start with a Python script created by Graphical Modeler in
:ref:`Unit 10 <modeler-python>`. Run this script from the main toolbar
by |grass-script-load| :sup:`Launch user-defined script`.

.. note:: Before starting the script GRASS will ask about adding a
   script directory path into GRASS_ADDON_PATH. It can be useful if
   you will run script(s) from this directory more often. Then you
   don't need to define full path to scripts, script name will be
   enough.
   
   .. figure:: ../images/units/11/addon-path.png

      Add script directory into GRASS Addon Path.

.. figure:: ../images/units/11/script-output.png
   :class: middle
           
   Script output is printed into :item:`Console` tab.

.. todo:: GRASS doesn't show UI dialog...
          
Open exported Python script by your favorite IDE or if your do not
have any just use GRASS-integrated Python editor |grass-python| :sub:`Open
a simple Python code editor`.

.. figure:: ../images/units/11/editor.png

   Simple GRASS Python code editor in action.

Load script by |grass-open| :sup:`Open` and improve the script by
printing NDVI value statistics (be aware of indentation which is
crucial for Python syntax) as described in :ref:`Unit 10
<python-code>`.

.. literalinclude:: ../_static/scripts/ndvi-v3.py
   :language: python
   :lines:  104-111

.. note:: Import also relevant function

   .. literalinclude:: ../_static/scripts/ndvi-v3.py
      :language: python
      :lines:  37,39

Let's also modify automatically generated parameter keys including
their description:

.. code-block:: python

   # % key: voverlay1_ainput
   # % description: Name of input vector map (A)   
   ...
   # % key: rreclassarea6_value
   ...
       ainput=options["voverlay1_ainput"],
   ...
       value=options["rreclassarea6_value"],
       
to

.. literalinclude:: ../_static/scripts/ndvi-v3.py
   :language: python
   :lines:  20-21,28,48,88

.. figure:: ../images/units/11/run-script.png
   :class: large
        
   Launch script by |grass-execute| :sup:`Run` and check out an output
   in :item:`Console` tab.


Statistics
----------

Let's add additional NDVI classes statistics computed by
:grasscmd:`v.report`.

.. literalinclude:: ../_static/scripts/ndvi-v3.py
   :language: python
   :lines:  113-122

Output of :grasscmd:`v.report` module need to be parsed. Unfortunately
the command does not offer a shell script output similarly to
:grasscmd:`r.univar`. Python fuctions like ``splitlines()`` and
``split()`` can be used.

Let's compute also zonal statistics for each NDVI class by
:grasscmd:`v.rast.stats`. Zonal attributes can be printed by
:grasscmd:`v.db.select` tool.

.. todo:: Can be simplified since this statistics is already reported
   by :grasscmd:`v.report`
          
.. literalinclude:: ../_static/scripts/ndvi-v3.py
   :language: python
   :lines:  124-134
                
Example of script output below.

::

    --------------------------------------------------------------------------------
    NDVI value statistics
    --------------------------------------------------------------------------------
    NDVI min value: -0.6094
    NDVI max value: 0.9997
    NDVI mean value: 0.6485
    --------------------------------------------------------------------------------
    NDVI class statistics
    --------------------------------------------------------------------------------
    NDVI class 1: 271.5 ha
    NDVI class 2: 2438.1 ha
    NDVI class 3: 7561.3 ha
    --------------------------------------------------------------------------------
    NDVI class 1: -0.4340 (min) 0.7404 (max) 0.0514 (mean)
    NDVI class 2: -0.1738 (min) 0.8547 (max) 0.3262 (mean)
    NDVI class 3: -0.6094 (min) 0.9997 (max) 0.7740 (mean)

Sample script to download: `ndvi-v3.py <../_static/scripts/ndvi-v3.py>`__

.. task:: In order to simplify testing and improve code readability
   split code into two Python functions: ``compute()`` and ``stats()``.

   .. code-block:: python

      def main(options, flags):
          compute(options)
          stats(options)
      
          return 0
