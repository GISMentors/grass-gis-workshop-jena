Unit 23 - Spatio-temporal parallelization
=========================================

This unit is focused on improving the script created in :doc:`22` by
processing Sentinel scenes in parallel. Paralelization is performed by
:pygrass-modules:`ParallelModuleQueue` similarly as in :doc:`19`, see
line :lcode:`209`.

New PyGRASS functionality is introduced on line :lcode:`132`. By
:pygrass-modules:`MultiModule` it is possible to define a list of
modules which will work as isolated units not influenced by other
processes running parallel. By setting ``set_temp_region`` computation
region settings will be also isolated from other processes. By
``sync=True`` all modules will run in serial order in a background
process. Tools are added to the queue (:lcode:`132`) with
``run_=False`` to prevent them from running immediately, see
eg. :lcode:`72`. Queue with calculation tools is processed on line
:lcode:`192`.

The option :param:`ncproc` on line :lcode:`43` enables controlling
number of processes running in parallel.

Compared to `ndvi-tgrass-v1.py
<../_static/scripts/ndvi-tgrass-v1.py>`__: NDVI is computed by
:grasscmd:`r.mapcalc` (:lcode:`74`) instead of combination of
:grasscmd:`r.mask` and :grasscmd:`i.vi`. The concept of raster masks
created by :grasscmd:`r.mask` would not be functional in the case of
parallel computation (the module creates raster map named
:map:`MASK`). The for loop (:lcode:`179`) is split into two parts: 1)
perform computation in parallel (:lcode:`192`) and 2) compute
statistics (:lcode:`196`).

.. literalinclude:: ../_static/scripts/ndvi-tgrass-v2.py
   :language: python
   :linenos:
   :emphasize-lines: 43, 72, 85, 132, 179, 192, 196, 209
                     
Sample script to download: `ndvi-tgrass-v2.py
<../_static/scripts/ndvi-tgrass-v2.py>`__

.. task:: Compare `ndvi-tgrass-v1.py
          <../_static/scripts/ndvi-tgrass-v1.py>`__ / `ndvi-tgrass-v2.py
          <../_static/scripts/ndvi-tgrass-v2.py>`__ processing time
