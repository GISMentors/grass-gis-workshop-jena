Unit 08 - Modeler
=================

The **Graphical Modeler** allows creating, editing, and managing complex
models in an easy-to-use graphical user interface. Using the Graphical
Modeler, a chain of tools (ie. GRASS modules) can be wrapped
into one process (a model). A model can be executed repeatedly with
slightly different inputs or parameters.

Our first model will be based on :doc:`05`. Actually the model will
perform two operations:

#. set mask based on vector cloud mask file (:grasscmd:`r.mask`) and
#. compute NDVI (:grasscmd:`i.vi`)

Graphical Modeler can be launched from menu :menuselection:`File -->
Graphical modeler` or by |grass-modeler-main| :sup:`Graphical Modeler`
from the main toolbar (or alternatively as :grasscmd:`g.gui.gmodeler`
module from console).

.. figure:: ../images/units/08/gmodeler.png

   Graphical Modeler.
   
GRASS tools can be added to the model from menu
:menuselection:`Model --> Add command` or by |grass-module-add|
:sup:`Add GRASS tool (module) to model` from the main toolbar.

.. figure:: ../images/units/08/add-module.png
   :class: small
   
   Add GRASS tool (module) to model, in this case :grasscmd:`r.mask`.

After adding :grasscmd:`r.mask` module to the model let's open its
properties dialog by double-click and enter vector map to be used as a
mask. Don't forget to enable inverse mask by :param:`-i` flag in
:item:`Create` tab.

.. figure:: ../images/units/08/module-props.png
   :class: middle
   
   Define parameters for :grasscmd:`r.mask`, a vector map used for
   creating a mask.

In similar way will be added to model the :grasscmd:`i.vi`
tool. Properties dialog for this command is open automatically because
there are required options which must be set.

.. figure:: ../images/units/08/model-v1.png

   NDVI model version 1.

It's a good idea to set metadata for the model and enable overwriting
data produced by model (:menuselection:`Model --> Model
properties`). Resultant NDVI raster map may be also shown
automatically in the map window.

.. figure:: ../images/units/08/model-v1-props.png
   :class: small
   
   Define model properties and enable overwriting data produced by
   model.

.. figure:: ../images/units/08/model-v1-req-display.png
   
   Set the output raster map to be automatically displayed in the map
   window.
   
Now let's run our model by |grass-execute| :sup:`Run model`. Progress
is printed into :item:`Command output`.

.. figure:: ../images/units/08/model-v1-output.png

   Model computation progress.

.. figure:: ../images/units/08/model-v1-display.png
   :class: large
   
   NDVI raster map computed by the modeler.

.. task:: Run the model repeatedly using different computation regions.

.. tip:: Current computation region can be changed easily by *Set
   computation region extent interactively* from |grass-zoom-more|
   :sup:`Various zoom options` in Map Display.

.. figure:: ../images/units/08/model-v1-region.png
   :class: large
           
   Change computation region before running the modeler.

.. important:: Before changing the region it's a good idea to remove mask if
   exists.

   .. code-block:: bash

      r.mask -r

Sample model to download: `ndvi-v1.gxm <../_static/models/ndvi-v1.gxm>`__
