Unit 12 - Script User Interface
===============================

Standard input
--------------

In the script prepared in :doc:`11` some tools (:grasscmd:`r.recode`,
:grasscmd:`r.colors`) use hardcoded paths to the input files. See code
below (:option:`rules` option):

.. literalinclude:: ../_static/scripts/ndvi-v3.py
   :language: python
   :lines: 78-83,98-102
   :emphasize-lines: 5, 9
                     
Content of input files can be defined as a string object and transfered
to the command via standard input (``stdin_``). See a sample code
below:

.. literalinclude:: ../_static/scripts/ndvi-v4.py
   :language: python
   :lines:  92-98,113-118
   :emphasize-lines: 6, 11
                     
Note that many of GRASS modules allows sending data via standard input
by option value ``-`` (dash). In our case the both commands will be
changed to use ``rules="-"`` syntax.

.. task:: Define a cleanup routine to remove intermediate data by
   :grasscmd:`g.remove` tool.
                   
   .. literalinclude:: ../_static/scripts/ndvi-v4.py
      :language: python
      :lines:  51-56

User interface (UI)
-------------------

Let's improve UI generated by Graphical Modeler in :doc:`10`.

.. literalinclude:: ../_static/scripts/ndvi-v3.py
   :language: python
   :lines:  15-32

.. figure:: ../images/units/12/ndvi-dialog.png
   :class: small
      
   Generated GUI dialog with ``voverlay1_ainput`` option.

Let's change UI by defining parameters below:

* ``region``: vector map defining a computation region (required)
* ``clouds``: vector map with cloud mask features (required)
* ``red``: input red channel (required)
* ``nir``: input nir channel (required)
* ``min_area``: threshold for removing small areas (optional)
* ``output``: output vector map (required)

UI definition below.
  
.. literalinclude:: ../_static/scripts/ndvi-v4.py
   :language: python
   :lines:  15-41

.. figure:: ../images/units/12/ndvi-dialog-params.png

   GUI dialog with input options.
   
In the script input parameters are still hardcoded, eg.

.. literalinclude:: ../_static/scripts/ndvi-v3.py
   :language: python
   :lines: 46-57
   :emphasize-lines: 6

Input parameters are accesible by ``options`` and ``flags``
objects which are generated by ``parse()`` function.

.. literalinclude:: ../_static/scripts/ndvi-v4.py
   :language: python
   :lines:  158

Options and flags objects are Python dictionaries, where parameters are
accessible by keys, see example below.

.. literalinclude:: ../_static/scripts/ndvi-v4.py
   :language: python
   :lines:  60-71
   :emphasize-lines: 3, 6
                     
.. figure:: ../images/units/12/call-ndvi-script.png
   :class: large
   
   Improved NDVI script in action.

Sample script to download: `ndvi-v4.py <../_static/scripts/ndvi-v4.py>`__
